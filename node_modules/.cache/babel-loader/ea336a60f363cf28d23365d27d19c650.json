{"ast":null,"code":"var _jsxFileName = \"/home/alessandro/Github/ale142.github.io/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Layout } from 'antd';\nimport Home from './component/Home';\nimport About from './component/About';\nimport Edu from './component/Edu';\nimport Links from './component/Links';\nimport Skills from './component/Skills';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header,\n  Footer,\n  Content,\n  Sider\n} = Layout;\n\nfunction App() {\n  _s();\n\n  const [theme, setTheme] = useState(\"light\");\n  useEffect(() => {\n    if (localStorage.getItem('theme')) {\n      console.log(\"here\");\n\n      if (localStorage.getItem('theme') === 'dark') {\n        localStorage.setItem('theme', 'dark');\n        document.documentElement.className = 'dark';\n      } else if (localStorage.getItem('theme') === 'light') {\n        localStorage.setItem('theme', 'light');\n        document.documentElement.className = 'light';\n      } else {\n        localStorage.setItem('theme', 'light');\n        document.documentElement.className = 'light';\n      }\n    }\n\n    console.log(document.documentElement.className);\n  });\n  useEffect(() => {\n    localStorage.setItem('theme', theme);\n    document.documentElement.className = theme;\n  }, [theme]);\n\n  const changeTheme = newTheme => {\n    setTheme(newTheme);\n  };\n\n  const particlesInit = main => {\n    console.log(main); // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n  };\n\n  const particlesLoaded = container => {\n    console.log(container);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(Home, {\n        changeTheme: changeTheme,\n        theme: theme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Edu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Skills, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Links, {\n        theme: theme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 4\n  }, this);\n}\n\n_s(App, \"+6C7zX0KFXKdtXxqQH7LMHLz9vo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/alessandro/Github/ale142.github.io/src/App.tsx"],"names":["React","useEffect","useState","Layout","Home","About","Edu","Links","Skills","Header","Footer","Content","Sider","App","theme","setTheme","localStorage","getItem","console","log","setItem","document","documentElement","className","changeTheme","newTheme","particlesInit","main","particlesLoaded","container"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAIA,MAAM;AAACC,EAAAA,MAAD;AAASC,EAAAA,MAAT;AAAiBC,EAAAA,OAAjB;AAA0BC,EAAAA;AAA1B,IAAmCT,MAAzC;;AAIA,SAASU,GAAT,GAAe;AAAA;;AAGb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAS,OAAT,CAAlC;AAEAD,EAAAA,SAAS,CAAE,MAAM;AACf,QAAGe,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAH,EAAkC;AAChCC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AACA,UAAGH,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,MAArC,EAA6C;AAC3CD,QAAAA,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8B,MAA9B;AACAC,QAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,GAAqC,MAArC;AACD,OAHD,MAGO,IAAIP,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,OAAtC,EAA+C;AACpDD,QAAAA,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8B,OAA9B;AACAC,QAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,GAAqC,OAArC;AACD,OAHM,MAGA;AACLP,QAAAA,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8B,OAA9B;AACAC,QAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,GAAqC,OAArC;AACD;AACF;;AACDL,IAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACC,eAAT,CAAyBC,SAArC;AACD,GAfQ,CAAT;AAiBAtB,EAAAA,SAAS,CAAE,MAAM;AACfe,IAAAA,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8BN,KAA9B;AACAO,IAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,GAAqCT,KAArC;AACD,GAHQ,EAGN,CAACA,KAAD,CAHM,CAAT;;AAMA,QAAMU,WAAW,GAAIC,QAAD,IAAsB;AACxCV,IAAAA,QAAQ,CAACU,QAAD,CAAR;AACD,GAFD;;AAGA,QAAMC,aAAa,GAAIC,IAAD,IAAe;AACnCT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAZ,EADmC,CAGnC;AACD,GAJD;;AAMA,QAAMC,eAAe,GAAIC,SAAD,IAAoB;AAC1CX,IAAAA,OAAO,CAACC,GAAR,CAAYU,SAAZ;AACD,GAFD;;AAIA,sBACC,QAAC,MAAD;AAAA,2BAKK,QAAC,OAAD;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,WAAW,EAAIL,WAArB;AAAkC,QAAA,KAAK,EAAIV;AAA3C;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,KAAD;AAAO,QAAA,KAAK,EAAIA;AAAhB;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AALL;AAAA;AAAA;AAAA;AAAA,UADD;AAqBD;;GA9DQD,G;;KAAAA,G;AAgET,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Layout } from 'antd';\nimport Home from './component/Home'\nimport About from './component/About'\nimport Edu from './component/Edu'\nimport Links from './component/Links'\nimport Skills from './component/Skills'\nimport { BooleanLiteral } from '@babel/types';\nimport {debounce} from './utils/debounce';\nimport Particles from \"tsparticles\";\nconst {Header, Footer, Content, Sider} = Layout;\n\n\n\nfunction App() {\n\n  \n  const [theme, setTheme] = useState<string>(\"light\");\n\n  useEffect (() => {\n    if(localStorage.getItem('theme')) {\n      console.log(\"here\");\n      if(localStorage.getItem('theme') === 'dark') {\n        localStorage.setItem('theme', 'dark');\n        document.documentElement.className = 'dark';\n      } else if (localStorage.getItem('theme') === 'light') {\n        localStorage.setItem('theme', 'light');\n        document.documentElement.className = 'light';\n      } else {\n        localStorage.setItem('theme', 'light');\n        document.documentElement.className = 'light';\n      } \n    }\n    console.log(document.documentElement.className);\n  });\n\n  useEffect( () => {\n    localStorage.setItem('theme', theme);\n    document.documentElement.className = theme;\n  }, [theme])\n\n  \n  const changeTheme = (newTheme: string) => {\n    setTheme(newTheme);\n  }\n  const particlesInit = (main: any) => {\n    console.log(main);\n\n    // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n  }\n\n  const particlesLoaded = (container: any) => {\n    console.log(container);\n  } \n\n  return (\n   <Layout>\n     \n    \n        {/* <Sider style = {{display: 'flex', maxWidth: \"0px !important\", width:'0px', minWidth: visible ? '200px' : '0px', flex: '0 0 0'}}> </Sider> */}\n        \n        <Content>\n          <Home changeTheme = {changeTheme} theme = {theme}></Home>\n         \n          <About></About>\n          <Edu></Edu>\n          <Skills></Skills>\n          <Links theme = {theme}></Links>\n        </Content>\n        \n     \n    \n     \n   </Layout>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}